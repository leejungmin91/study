plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    mavenCentral()
}

/*dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // Kotlin 코드에 대한 Annotation Processor 설정
    kapt "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    kapt("org.springframework.boot:spring-boot-configuration-processor")

    //validate
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly 'com.h2database:h2'
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Kotlin mockk
    testImplementation("io.mockk:mockk:1.9.3")
    // Kotlin Kotest
    testImplementation 'io.kotest:kotest-runner-junit5:5.3.0'
}*/

subprojects {
    group = 'com.min.store'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    //id 'org.springframework.boot' version '2.5.4'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // jwt
        implementation 'io.jsonwebtoken:jjwt:0.9.1'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    bootJar.enabled = false

    test {
        useJUnitPlatform()
    }
}

project(':store-core') {

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
    }
}

project(':store-product-api') {

    jar.enabled = true

    dependencies {
        compileOnly project(':store-core')
    }
}

project(':store-order-api') {

    jar.enabled = true

    dependencies {
        compileOnly project(':store-core')
    }
}

project(':store-member-api') {

    jar.enabled = true

    dependencies {
        compileOnly project(':store-core')
    }
}
